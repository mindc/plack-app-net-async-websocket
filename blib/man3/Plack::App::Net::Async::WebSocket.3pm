.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Plack::App::Net::Async::WebSocket 3"
.TH Plack::App::Net::Async::WebSocket 3 "2016-05-13" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
"Plack::App::Net::Async::WebSocket" \- serve WebSocket clients using "IO::Async" over PSGI
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use Plack::App::Net::Async::WebSocket;
\&
\& my $app = Plack::App::Net::Async::WebSocket\->new(
\&        on_client => sub {
\&                my ( $client ) = @_;
\&                $client\->sent_frame( \*(AqHello\*(Aq );
\&        },
\&        on_frame => sub {
\&                my ( $client, $frame ) = @_;
\&                $client\->send_frame( $frame ); # echo
\&        },
\&        on_closed => sub {
\&                my ( $client ) = @_;
\&        }
\& );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This subclass of Plack::Component accepts WebSocket connections. When a
new connection arrives it will perform an initial handshake and take control
over existing connection.
.SH "PARAMETERS"
.IX Header "PARAMETERS"
The following named parameters may be passed to \f(CW\*(C`new\*(C'\fR:
.IP "on_handshake => \s-1CODE\s0" 8
.IX Item "on_handshake => CODE"
A \s-1CODE\s0 reference for when a new connection has been handshaked.
This parameter is optional
.IP "on_frame => \s-1CODE\s0" 8
.IX Item "on_frame => CODE"
A \s-1CODE\s0 reference for when a frame is received
.IP "on_close => \s-1CODE\s0" 8
.IX Item "on_close => CODE"
This parameter is optional
.IP "on_error => \s-1CODE\s0" 8
.IX Item "on_error => CODE"
This parameter is optional
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "$client\->send_frame( @args )"
.el .SS "\f(CW$client\fP\->send_frame( \f(CW@args\fP )"
.IX Subsection "$client->send_frame( @args )"
Sends a frame to the peer containing the given string. The arguments 
are passed to Protocol::WebSocket::Frame's \f(CW\*(C`new\*(C'\fR method.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 8
Net::Async::WebSocket \- WebSocket server using \f(CW\*(C`IO::Async\*(C'\fR
.IP "\(bu" 8
Plack::Handler::Net::Async::HTTP::Server \- \s-1HTTP\s0 handler for Plack using Net::Async::HTTP::Server
.SH "AUTHOR"
.IX Header "AUTHOR"
Paweł Feruś <null@mindc.net>
