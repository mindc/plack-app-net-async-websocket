=encoding UTF-8

=head1 NAME

C<Plack::App::Net::Async::WebSocket> - serve WebSocket clients using C<IO::Async> over PSGI

=head1 SYNOPSIS

 # app.psgi

 use Plack::App::Net::Async::WebSocket;

 my $app = Plack::App::Net::Async::WebSocket->new(
	on_handshake => sub {
		my ( $websocket ) = @_;
		$websocket->sent_frame( 'Hello' );
	},
	on_frame => sub {
		my ( $websocket, $frame ) = @_;
		$websocket->send_frame( $frame ); # echo
	},
	on_closed => sub {
		my ( $websocket ) = @_;
	}
 )->to_app;


 # using Plack::Builder

 use Plack::Builder;
 use Plack::App::Net::Async::WebSocket;

 builder {
	mount '/websocket' => Plack::App::Net::Async::WebSocket->new(
	       	on_frame => sub {
                	my ( $websocket, $frame ) = @_;
	                $websocket->send_frame( $frame ); # echo
        	},
 	);
 };
 

=head1 DESCRIPTION

This subclass of L<Plack::Component> accepts WebSocket connections. When a
new connection arrives it will perform an initial handshake and take control
over existing connection.

=head1 PARAMETERS

The following named parameters may be passed to C<new>:

=over 8

=item on_handshake => CODE

A CODE reference for when a new connection has been handshaked.
This parameter is optional

=item on_frame => CODE

A CODE reference for when a frame is received

=item on_close => CODE

This parameter is optional

=item on_error => CODE

This parameter is optional

=back

=head1 METHODS

=head2 $client->send_frame( @args )

Sends a frame to the peer containing the given string. The arguments 
are passed to L<Protocol::WebSocket::Frame>'s C<new> method.

=head1 SEE ALSO

=over 8

=item *

L<Net::Async::WebSocket> - WebSocket server using C<IO::Async>

=item *

L<Plack::Handler::Net::Async::HTTP::Server> - HTTP handler for Plack using L<Net::Async::HTTP::Server>

=back

=head1 AUTHOR

Paweł Feruś <null@mindc.net>

